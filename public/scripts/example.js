/**
* Sourced from https://facebook.github.io/react/docs/tutorial.html
*/

var ItemBox = React.createClass({
  loadItemsFromServer: function() {
    $.ajax({
      url: this.props.url,
      dataType: 'json',
      cache: false,
      success: function(data) {
        this.setState({data: data});
      }.bind(this),
      error: function(xhr, status, err) {
        console.error(this.props.url, status, err.toString());
      }.bind(this)
    });
  },
  handleItemSubmit: function(item) {
    var items = this.state.data;
    // Optimistically set an id on the new comment. It will be replaced by an
    // id generated by the server. In a production application you would likely
    // not use Date.now() for this and would have a more robust system in place.
    // item.id = Date.now();
    var newItems = items.concat([item]);
    this.setState({data: newItems});
    $.ajax({
      url: this.props.url,
      dataType: 'json',
      type: 'POST',
      data: item,
      success: function(data) {
        this.setState({data: data});
      }.bind(this),
      error: function(xhr, status, err) {
        this.setState({data: items});
        console.error(this.props.url, status, err.toString());
      }.bind(this)
    });
  },
  getInitialState: function() {
    return {data: []};
  },
  componentDidMount: function() {
    this.loadItemsFromServer();
    setInterval(this.loadItemsFromServer, this.props.pollInterval);
  },
  render: function() {
    return (
      <div className="itemBox">
        Hello, world! I am a ItemBox.
        <h1>Items</h1>
        <ItemList data={this.state.data} />
        <ItemForm onItemSubmit={this.handleItemSubmit} />
      </div>
    );
  }
});

var ItemList = React.createClass({
  render: function() {
    var itemNodes = this.props.data.map(function(item) {
      return (
        <Item name={item.name} key={item.id}>
          {item.quantity}
        </Item>
      );
    });
    return (
      <div className="itemList">
        {itemNodes}
      </div>
    );
  }
});

var ItemForm = React.createClass({
  getInitialState: function() {
    return {name: '', quantity: ''};
  },
  handleNameChange: function(e) {
    this.setState({name: e.target.value});
  },
  handleQuantityChange: function(e) {
    this.setState({quantity: e.target.value});
  },
  handleSubmit: function(e) {
    e.preventDefault();
    var name = this.state.name.trim();
    var quantity = this.state.quantity;
    if (!quantity || !name) {
      return;
    }
    this.props.onItemSubmit({name: name, quantity: quantity});
    this.setState({name: '', quantity: ''});
  },
  render: function() {
    return (
      <form className="itemForm" onSubmit={this.handleSubmit}>
        <input
          type="text"
          placeholder="Item name"
          value={this.state.name}
          onChange={this.handleNameChange}
        />
        <input
          type="number"
          placeholder="0"
          value={this.state.quantity}
          onChange={this.handleQuantityChange}
        />
        <input type="submit" value="Post" />
      </form>
    );
  }
});

var Item = React.createClass({
  render: function() {
    return (
      <div className="item">
        <h2 className="itemName">
          	{this.props.name}
        </h2>
        <h3 className="itemQuantity">
        	{this.props.quantity}
        </h3>
        {this.props.children}
      </div>
    );
  }
});

ReactDOM.render(
  <ItemBox url="/items" pollInterval={2000} />,
  document.getElementById('content')
);